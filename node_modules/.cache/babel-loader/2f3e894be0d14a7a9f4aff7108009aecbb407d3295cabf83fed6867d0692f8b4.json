{"ast":null,"code":"var _jsxFileName = \"/home/kimani/Development/Phase_2/phase-2-week-1-codechallenge/src/Components/NewTransactions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewTransactions() {\n  _s();\n  //useState\n  const [isClicked, setIsClicked] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n    id: \"\"\n  });\n  // Logs the data written on the Search bar\n  const handleChange = e => {\n    console.log(e.target.value);\n    console.log(setIsClicked({\n      ...isClicked,\n      [e.target.name]: e.target.value\n    }));\n  };\n  // submit function\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch('http://localhost:3000/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(isClicked)\n    }).then(response => response.json()).then(data => {\n      setIsClicked({\n        ...isClicked,\n        date: data.date,\n        description: data.description,\n        category: data.category,\n        amount: data.amount,\n        id: data.id++\n      });\n      window.location.reload(); /// Auto-reloads the window to display the new transaction\n    });\n  };\n\n  // Html elements to add new transaction\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formInput\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputTransaction\",\n      name: \"date\",\n      type: \"date\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputTransaction\",\n      type: \"text\",\n      name: \"description\",\n      placeholder: \"Description\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"type\",\n      placeholder: \"Category\",\n      name: \"category\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"inputTransaction\",\n      type: \"number\",\n      name: \"amount\",\n      placeholder: \"Amount\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"newTransactions\",\n      type: \"submit\",\n      children: \"New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(NewTransactions, \"l2sHhVKvmdhXFLHnsMbxpp5p/tI=\");\n_c = NewTransactions;\nexport default NewTransactions;\nvar _c;\n$RefreshReg$(_c, \"NewTransactions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","NewTransactions","_s","isClicked","setIsClicked","date","description","category","amount","id","handleChange","e","console","log","target","value","name","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","window","location","reload","onSubmit","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/home/kimani/Development/Phase_2/phase-2-week-1-codechallenge/src/Components/NewTransactions.js"],"sourcesContent":["import React, {useState} from 'react'\n\nfunction NewTransactions() {\n\n    //useState\n    const [isClicked, setIsClicked] = useState({\n        date:\"\",\n        description:\"\",\n        category:\"\",\n        amount:\"\",\n        id:\"\"\n    })\n    // Logs the data written on the Search bar\n       const handleChange = (e) => {\n        console.log(e.target.value)\n        console.log(setIsClicked({\n            ...isClicked,\n            [e.target.name] : e.target.value,   \n        }))\n    }\n    // submit function\n        const handleSubmit = (e) => {\n             e.preventDefault();\n            fetch('http://localhost:3000/transactions', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(isClicked),\n        })\n        .then(response => response.json()) \n        .then(data => {\n            setIsClicked({\n                ...isClicked,\n                date: data.date,\n                description: data.description,\n                category: data.category,\n                amount: data.amount,\n                id:data.id ++\n            });\n            window.location.reload() /// Auto-reloads the window to display the new transaction\n        })\n       \n    };\n\n    // Html elements to add new transaction\n  return (\n    <form onSubmit={handleSubmit} className = \"formInput\">\n        <input id = \"inputTransaction\" name='date' type=\"date\" onChange={handleChange}  />\n        <input id = \"inputTransaction\" type=\"text\" name='description' placeholder='Description' onChange={handleChange} />\n        <input id=\"type\" placeholder= \"Category\" name='category' onChange = {handleChange} />\n        <input id = \"inputTransaction\" type=\"number\" name='amount' placeholder='Amount' onChange={handleChange}  />\n        <button id = \"newTransactions\" type=\"submit\" >New Transaction</button>\n    </form>\n  )\n}\n\nexport default NewTransactions"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAEvB;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC;IACvCO,IAAI,EAAC,EAAE;IACPC,WAAW,EAAC,EAAE;IACdC,QAAQ,EAAC,EAAE;IACXC,MAAM,EAAC,EAAE;IACTC,EAAE,EAAC;EACP,CAAC,CAAC;EACF;EACG,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC3BC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAC3BH,OAAO,CAACC,GAAG,CAACT,YAAY,CAAC;MACrB,GAAGD,SAAS;MACZ,CAACQ,CAAC,CAACG,MAAM,CAACE,IAAI,GAAIL,CAAC,CAACG,MAAM,CAACC;IAC/B,CAAC,CAAC,CAAC;EACP,CAAC;EACD;EACI,MAAME,YAAY,GAAIN,CAAC,IAAK;IACvBA,CAAC,CAACO,cAAc,CAAC,CAAC;IACnBC,KAAK,CAAC,oCAAoC,EAAE;MAC5CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACrB,SAAS;IAClC,CAAC,CAAC,CACDsB,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACVxB,YAAY,CAAC;QACT,GAAGD,SAAS;QACZE,IAAI,EAAEuB,IAAI,CAACvB,IAAI;QACfC,WAAW,EAAEsB,IAAI,CAACtB,WAAW;QAC7BC,QAAQ,EAAEqB,IAAI,CAACrB,QAAQ;QACvBC,MAAM,EAAEoB,IAAI,CAACpB,MAAM;QACnBC,EAAE,EAACmB,IAAI,CAACnB,EAAE;MACd,CAAC,CAAC;MACFoB,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAC;IAC7B,CAAC,CAAC;EAEN,CAAC;;EAED;EACF,oBACE/B,OAAA;IAAMgC,QAAQ,EAAEf,YAAa;IAACgB,SAAS,EAAG,WAAW;IAAAC,QAAA,gBACjDlC,OAAA;MAAOS,EAAE,EAAG,kBAAkB;MAACO,IAAI,EAAC,MAAM;MAACmB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE1B;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClFxC,OAAA;MAAOS,EAAE,EAAG,kBAAkB;MAAC0B,IAAI,EAAC,MAAM;MAACnB,IAAI,EAAC,aAAa;MAACyB,WAAW,EAAC,aAAa;MAACL,QAAQ,EAAE1B;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClHxC,OAAA;MAAOS,EAAE,EAAC,MAAM;MAACgC,WAAW,EAAE,UAAU;MAACzB,IAAI,EAAC,UAAU;MAACoB,QAAQ,EAAI1B;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrFxC,OAAA;MAAOS,EAAE,EAAG,kBAAkB;MAAC0B,IAAI,EAAC,QAAQ;MAACnB,IAAI,EAAC,QAAQ;MAACyB,WAAW,EAAC,QAAQ;MAACL,QAAQ,EAAE1B;IAAa;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC3GxC,OAAA;MAAQS,EAAE,EAAG,iBAAiB;MAAC0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAE;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEX;AAACtC,EAAA,CArDQD,eAAe;AAAAyC,EAAA,GAAfzC,eAAe;AAuDxB,eAAeA,eAAe;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}